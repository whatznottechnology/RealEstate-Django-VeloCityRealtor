# Generated by Django 5.0.2 on 2025-07-07 02:40

import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Amenity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('icon', models.ImageField(blank=True, help_text='Amenity icon/image', null=True, upload_to='amenities/icons/')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name_plural': 'Amenities',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name_plural': 'Categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('state', models.CharField(max_length=100)),
                ('country', models.CharField(default='India', max_length=100)),
                ('icon', models.ImageField(blank=True, help_text='City icon/image', null=True, upload_to='cities/icons/')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name_plural': 'Cities',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='SpecificationCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('order', models.PositiveIntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name_plural': 'Specification Categories',
                'ordering': ['order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('color', models.CharField(default='#007bff', help_text='Hex color code', max_length=7)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('project_by', models.CharField(help_text='Company or Brand', max_length=200)),
                ('logo', models.ImageField(blank=True, null=True, upload_to='project/logo/')),
                ('banner_image', models.ImageField(upload_to='project/banner/')),
                ('brochure', models.FileField(blank=True, help_text='PDF download', null=True, upload_to='project/brochure/')),
                ('location', models.CharField(max_length=300)),
                ('developers', models.CharField(help_text='Developer name', max_length=200)),
                ('build_up_area', models.CharField(help_text='e.g. 1200 sq ft', max_length=100)),
                ('bhk', models.CharField(help_text='e.g. 2, 3, 4 BHK', max_length=50)),
                ('no_of_blocks', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('no_of_units', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('status', models.CharField(choices=[('ready_to_move', 'Ready to Move'), ('under_construction', 'Under Construction'), ('upcoming', 'Upcoming'), ('sold_out', 'Sold Out')], default='under_construction', max_length=20)),
                ('possession_date', models.DateField(blank=True, null=True)),
                ('onwards_price', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('latitude', models.DecimalField(blank=True, decimal_places=8, max_digits=10, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=8, max_digits=11, null=True)),
                ('is_most_viewed', models.BooleanField(default=False, help_text='Mark as Most Viewed')),
                ('trending_tag', models.CharField(blank=True, choices=[('just_launched', 'Just Launched'), ('hot', 'Hot'), ('premium', 'Premium'), ('ultra_luxury', 'Ultra Luxury'), ('ready_to_move', 'Ready to Move'), ('affordable', 'Affordable')], help_text='Trending status', max_length=20, null=True)),
                ('is_nearby_property', models.BooleanField(default=False, help_text='Show in Nearby Properties')),
                ('is_recently_viewed', models.BooleanField(default=False, help_text='Mark as Recently Viewed')),
                ('is_hot_deal', models.BooleanField(default=False, help_text='Hot Deal Badge')),
                ('is_premium_listing', models.BooleanField(default=False, help_text='Premium Listing')),
                ('is_editors_choice', models.BooleanField(default=False, help_text="Editor's Choice")),
                ('views', models.PositiveIntegerField(default=0, help_text='For Most Viewed sorting')),
                ('is_featured', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('amenities', models.ManyToManyField(blank=True, related_name='projects', to='Projects.amenity')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='projects', to='Projects.category')),
                ('city', models.ForeignKey(blank=True, help_text='Select city', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='projects', to='Projects.city')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='NearestArea',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('area_type', models.CharField(choices=[('school', 'School'), ('hospital', 'Hospital'), ('metro', 'Metro Station'), ('mall', 'Shopping Mall'), ('restaurant', 'Restaurant'), ('park', 'Park'), ('airport', 'Airport'), ('bus_stop', 'Bus Stop'), ('other', 'Other')], max_length=20)),
                ('distance', models.CharField(blank=True, help_text='e.g. 2 km, 5 min walk', max_length=50)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='nearest_areas', to='Projects.project')),
            ],
            options={
                'ordering': ['area_type', 'name'],
            },
        ),
        migrations.CreateModel(
            name='GalleryImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='project/gallery/')),
                ('caption', models.CharField(blank=True, max_length=200)),
                ('order', models.PositiveIntegerField(default=0, help_text='Display order')),
                ('is_active', models.BooleanField(default=True)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='gallery_images', to='Projects.project')),
            ],
            options={
                'ordering': ['order', 'uploaded_at'],
            },
        ),
        migrations.CreateModel(
            name='FloorPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='e.g. 2BHK East Facing', max_length=100)),
                ('image', models.ImageField(upload_to='project/floor_plans/')),
                ('area', models.CharField(blank=True, help_text='e.g. 1200 sq ft', max_length=50)),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('order', models.PositiveIntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='floor_plans', to='Projects.project')),
            ],
            options={
                'ordering': ['order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='ConstructionUpdate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=200)),
                ('image', models.ImageField(upload_to='project/construction_updates/')),
                ('description', models.TextField(blank=True)),
                ('update_date', models.DateField()),
                ('order', models.PositiveIntegerField(default=0)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='construction_updates', to='Projects.project')),
            ],
            options={
                'ordering': ['-update_date', 'order'],
            },
        ),
        migrations.CreateModel(
            name='ProjectOverview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Project tagline or section title', max_length=200)),
                ('short_description', models.TextField(help_text='Rich or plain text description')),
                ('project', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='overview', to='Projects.project')),
            ],
        ),
        migrations.CreateModel(
            name='ProjectType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='project_types', to='Projects.category')),
            ],
            options={
                'ordering': ['category', 'name'],
                'unique_together': {('name', 'category')},
            },
        ),
        migrations.AddField(
            model_name='project',
            name='project_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='projects', to='Projects.projecttype'),
        ),
        migrations.AddField(
            model_name='project',
            name='tags',
            field=models.ManyToManyField(blank=True, related_name='projects', to='Projects.tag'),
        ),
        migrations.CreateModel(
            name='WhyChooseUs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('icon', models.CharField(blank=True, help_text='CSS icon class', max_length=50)),
                ('order', models.PositiveIntegerField(default=0)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='why_choose_us', to='Projects.project')),
            ],
            options={
                'verbose_name_plural': 'Why Choose Us',
                'ordering': ['order', 'title'],
            },
        ),
        migrations.CreateModel(
            name='SpecificationItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='e.g. Bedroom, Kitchen, Door', max_length=200)),
                ('description', models.TextField(help_text='e.g. Wooden flooring, Vitrified tiles')),
                ('order', models.PositiveIntegerField(default=0)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='Projects.specificationcategory')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='specifications', to='Projects.project')),
            ],
            options={
                'ordering': ['category__order', 'order', 'name'],
                'unique_together': {('project', 'category', 'name')},
            },
        ),
        migrations.AddIndex(
            model_name='project',
            index=models.Index(fields=['category', 'project_type'], name='Projects_pr_categor_9fd25b_idx'),
        ),
        migrations.AddIndex(
            model_name='project',
            index=models.Index(fields=['status', 'is_active'], name='Projects_pr_status_96f3be_idx'),
        ),
        migrations.AddIndex(
            model_name='project',
            index=models.Index(fields=['-views'], name='Projects_pr_views_9051bb_idx'),
        ),
        migrations.AddIndex(
            model_name='project',
            index=models.Index(fields=['-created_at'], name='Projects_pr_created_724270_idx'),
        ),
    ]
